<capitulo>Views</capitulo>
<nome>module-views</nome>

<lista>
  <item>Download</item>: <url>https://drupal.org/project/views</url>
  <item>Função</item>: listagem de conteúdo (node) em diversos formatos: tabela, grid, slideshow;
  <item>Uso</item>: /admin/structure/views
</lista>

    O módulo <b>Views</b> foi incluído no <i>core</i> do Drupal 8.

<br/>0.3cm

<subsubsubsecao>Listar e Pesquisar views por nome</subsubsubsecao>

<lista>
  <item/>listar views (nome, descrição, caminho e operações);
  <item/>identificar operações: editar, duplicar, desativar e clonar;
  <item/>configuração: habilitar <b>Sempre mostrar configurações de exibição
  avançadas</b>;
</lista>

<subsubsubsecao>Área de pré-visualização da view</subsubsubsecao>

<lista>
  <item/>editar uma view;
  <item/>identificar área de pré-visualização das alterações na view;
  <item/>configuração: Exibir a consulta SQL;
  <item/>configuração: Exibir estatísticas de desempenho;
  <item/>configuração avançada: Adicionar uma assinatura a todas as
  consultas SQL
</lista>

<subsubsubsecao>View de página e formato de tabela</subsubsubsecao>

<lista>
  <item/>adicionar uma view;
  <item/>definir o nome da view;
  <item/>definir a descrição de view (formato e local que será usada);
  <item/>indique o tipo de conteúdo que será listado;
  <item/>habilite <b>Criar página</b>;
  <item/>selecione o formato de exibição: tabela;
  <item/>clique em <b>Salvar e editar</b>;
  <item/>inclua a view em um menu clicando em <b>Sem menu</b>;
  <item/>inclua os CAMPOS, que serão apresentados como colunas;
  <item/>adicione o campo <b>Ver contador de resultados</b>;
  <item/>reordene os campos com <b>Ver contador de resultados</b> em primeiro;
  <item/>combine dois campos em uma coluna (configuração do formato tabela);
</lista>

    O valor de um campo (A) pode ser utilizado em outro campo (B) por meio
da opção <b>REESCREVER RESULTADOS</b>, desde que o campo (A) esteja acima do
campo (B). No campo (B) consulte os tokens disponíveis na opção <b>PADRÕES
DE SUBSTITUIÇÃO</b>, após selecionar <i>Override the output of this field
with custom text</i> ou <i>Output this field as a custom link</i>.

<subsubsubsecao>Critérios de filtragem expostos ao usuário</subsubsubsecao>

<lista>
  <item/>adicione um critério de filtragem;
  <item/>ative a opção <i>Expor este filtro para visitantes, para permitir
  que eles o alterem</i>;
</lista>

    Cada campo exposto aos usuários irá gerar um <i>input</i>. Para que um
<i>input</i> filtre <u>mais de um campo de texto</u>, adicione o campo
<b>Global: Combine Filters</b> como <b>CRITÉRIO DE FILTRAGEM</b>.

<br/>0.3cm

<subsubsubsecao>View de bloco com paginação</subsubsubsecao>

<lista>
  <item/>adicionar uma view;
  <item/>definir o nome da view;
  <item/>definir a descrição de view (formato e local que será usada);
  <item/>indique o tipo de conteúdo que será listado;
  <item/>habilite <b>Criar bloco</b>;
  <item/>selecione o formato de exibição: Lista HTML;
  <item/>clique em <b>Salvar e editar</b>;
  <item/>alterar o paginador para <b>Saída com paginação, paginador
  completo</b>;
  <item/>alterar a paginação para 5 itens;
  <item/>ativar ajax (requerido para filtros expostos em blocos);
  <item/>vincule o bloco da View a uma região;
</lista>

    É necessário habilitar o modo <b>ajax</b> para apresentar filtros ao
usuário em uma View de bloco.

    O módulo <link>https://www.drupal.org/project/views_infinite_scroll</link>
<text><b>Views Infinite Scroll</b></text> realiza a paginação por meio de um botão ou
automaticamente quando o usuário rolar ao final da lista.

<subsubsubsecao>Permissão, cabeçalho, rodapé</subsubsubsecao>

<lista>
  <item/>identificar opções de acesso por permissão ou por papel;
  <item/>configurar um cabeçalho a view como <b>Área de texto</b>;
  <item/>configurar um rodapé a view como <b>Área de texto</b>;
</lista>

    O tipo <b>Área de visualização</b> pode ser usado como cabeçalho ou
rodapé para incluir outra view.

<br/>0.3cm

<subsecao>Better Exposed Filters</subsecao>

<lista>
  <item>Download</item>: <url>https://drupal.org/project/better_exposed_filters</url>
  <item>Função</item>: apresentar Views em formato de acordeões;
  <item>Uso</item>:
  <lista>
    <item/>edite uma <b>View</b> que possua filtros expostos ao usuário;
    <item/>na opção <b>Estilo do formulário exibido</b>, selecione <b>Better
Exposed Filters</b>;
    <item/>configure:
    <lista>
      <item/>habilite <b>Autosubmeter</b>;
      <item/>habilite <b>Esconder botão submeter</b>;
    </lista>
  </lista>
</lista>

    Os filtros expostos não funcionaram mais na tela de pré-visualização.
Este módulo também permite que os filtros expostos sejam exibidos como
<b>Checkboxes/Radio Buttons</b> pelas configurações do <b>Estilo do
formulário exibido</b>.

<subsecao>Views Accordion</subsecao>

<lista>
  <item>Download</item>: <url>https://drupal.org/project/views_accordion</url>
  <item>Função</item>: apresentar Views em formato de acordeões;
  <item>Uso</item>:
  <lista>
    <item/>crie uma <b>View</b> para exibir um determinado tipo de conteúdo;
    <item/>informe o nome da view, use o nome do tipo de conteúdo no plural;
    <item/>informe a descrição da view: "View de Accordion utilizada na área Institucional.";
    <item/>defina o formato de exibição como <b>jQuery UI accordion</b> de <i>campos</i>;
    <item/>clique em <b>Salvar e editar</b>;
    <item/>adicione os campos do tipo de conteúdo selecionado;
    <item/>configuração do formato: <b>Row to display opened on start</b>: <b>Nenhum</b>;
    <item/>configuração do formato: habilite a opção <b>Dobrável</b> para
    poder fechar todos as linhas;
    <item/>configuração do formato: <b>Animation effect</b>: <b>Linear</b>;
  </lista>
</lista>

    O primeiro campo será utilizado como título do acordeão.

<subsubsubsecao>Filtro contextual em modo glossário</subsubsubsecao>

<lista>
  <item/>selecionar filtro contextual a partir do campo 'title';
  <item/>definir valor padrão 'a';
  <item/>ativar modo glossário limitado a 1 caractere;
  <item/>adicionar 'attachment';
  <item/>configurar filtro contextual do campo 'title' para exibir um sumário;
  <item/>o sumário deve ser aplicado somente ao attachment;
  <item/>definir o formato do sumário para 'não formatado';
  <item/>desabilitar visualização de contador dos itens (opcional);
  <item/>definir a exibição dos itens como 'inline';
  <item/>vincular o attachment a page:
  <item/>'attach to' page na tela do attachment, ou;
  <item/>'header->view area' aplicado somente a tela page;
  <item/>desabilite a herança de filtros contextuais em qualquer caso;
</lista>

<subsecao>Views Slideshow</subsecao>

<lista>
  <item>Download</item>: <url>https://drupal.org/project/views_slideshow</url>
  <item>Função</item>: construir slideshow a partir de conteúdos (nodes), campos de imagem, etc;
  <item>Dependência</item>:
<link>https://github.com/malsup/cycle</link><text>jQuery Cycle library</text>.
  <item>Tutorial do desenvolvedor</item>: <url>https://drupal.org/node/2858279</url>
  <item>Uso</item>: /admin/structure/views/add
  <lista>
    <item/>habilite o módulo <b>Views Slideshow: Cycle</b>;
  </lista>
</lista>

    O módulo <b>Views Slideshow: Cycle</b> implementa a transição de
conteúdo ou de determinado campo com recurso de controle para que o usuário
avançe ou retroceda a transição.

    Para criar um <b>Slideshow de imagem</b>, primeiro <u>crie um tipo de
conteúdo com um campo do tipo imagem</u>, que denominaremos de
<b>Eslaide</b>, e cadastre alguns conteúdo, normalmente de mesmo tamanho,
por exemplo 726x166 pixels.

<comando>
# su -l portal
$ cd /var/www/portal/drupal
$ mkdir -p libraries/jquery.cycle libraries/jquery.hoverIntent libraries/json2
$ cd libraries/jquery.cycle
$ wget https://malsup.github.io/jquery.cycle.all.js
$ cd ../../libraries/jquery.hoverIntent
$ wget https://raw.githubusercontent.com/briancherne/jquery-hoverIntent/master/
                                                            jquery.hoverIntent.js
$ cd ../../libraries/json2
$ wget https://raw.githubusercontent.com/douglascrockford/JSON-js/master/json2.js
</comando>

    Limpe o cache do Drupal nas configurações de <b>Desenvolvimento => Desempenho</b>.

<br/>0.2cm

<subsubsubsecao>Slideshow de imagem</subsubsubsecao>

<lista>
  <item/>crie uma <b>Page View</b> para exibir conteúdo do tipo
         <b>Eslaide</b>;
  <item/>defina o formato de exibição como <b>Slideshow</b> de
         <i>fields</i>;
  <item/>continue e edite a view;
  <item/>adicione o campo de imagem;
  <item/>remova o campo de título;
  <item/>defina ou remova o título da view;
  <item/>defina a paginação para <b>Display all items</b>;
</lista>

<subsubsubsecao>Usar paginador como um contador</subsubsubsecao>

<lista>
  <item/>adicione o campo <b>Ver contador de resultados</b> (<i>Global: View result
counter</i>;
  <item/>configure o campo:
  <lista>
    <item/><b>Exclude from display</b>;
    <item/>na seção <b>Rewrite results</b> marque <b>Output this field as a
           link</b> e use <b>#</b> (opcional);
  </lista>
  <item/>configure o formato <b>Slideshow</b>:
  <lista>
    <item/>ative o paginador em <b>Bottom Widgets</b>;
    <item/>configure o paginador para o campo <b>Global: View result
           counter</b>;
    <item/>ative a opção <b>Activate Slide and Pause on Pager Hover</b>;
  </lista>
</lista>

<comando>
/* CSS do paginador */
.views-slideshow-pager-field-item {
    float: left; padding: 5px; }
.views-slideshow-pager-field-item.active {
    background-color: #bbb; border-radius: 5px; }
</comando>

<subsubsubsecao>Usar paginador como thumbnail da imagem</subsubsubsecao>

<lista>
  <item/>configuração: adicionar paginador como thumbnail;
  <item/>remover o campo 'Global: view result counter';
  <item/>criar estilo de imagem com scale e crop com 40px/40px;
  <item/>adicionar um segundo campo com a imagem (add field) na view;
  <item/>não exibir este campo de imagem (exclude from display);
  <item/>usar o novo estilo da imagem nesse campo;
  <item/>configuração: selecionar este campo como paginador;
  <item/>ativar slide e pausar slide ao passar o mouse (hover);
</lista>

<comando>
/* CSS do paginador */
.view-slideshow-page-fields {
    position: absolute; bottom: 20px; right: 10px; z-index: 100;
    background-color: rgba(0,0,0,0.6); border-radius:6px; padding:10px; }
.views-field-title {
    position: absolute; top: 0px; left: 0px; z-index: 100;
    background-color: rgba(0,0,0,0.6); border-radius: 0 0 6px 0; padding: 10px; }
.views-field-title a {
    color:#ccc; text-shadow: 2px 2px 000; }
</comando>

<subsubsubsecao>Slideshow de conteúdo</subsubsubsecao>

<lista>
  <item/>crie um <b>Block View</b> com formato slideshow;
  <item/>configuração: não fixar a altura do slide no bloco em <i>view actions advanced</i>;
  <item/>configuração: definir efeito de transição do slide;
  <item/>configuração: definir o tempo de exibição do slide (time delay);
  <item/>configuração: definir o tempo de transição de slide (speed);
  <item/>definir a paginação para um número específico de slides (5);
  <item/>configuração: adicionar controles (anterior, pause, próximo);
  <item/>configuração: adicionar contador de slide (1 of 5);
  <item/>configuração: adicionar paginador como contador (1 2 3 4 5);
</lista>

<subsecao>Views Slideshow Configurable Controls</subsecao>

    Módulo disponível apenas para <b>Drupal 7</b>.

<lista>
  <item>Download</item>: <url>https://drupal.org/project/vscc</url>
  <item>Função</item>: fornece um novo widget de controle para o usuário
                       retroceder e avançar slideshows;
  <item>Uso</item>:
  <lista>
    <item/>edite uma <b>View</b> no formato <b>Slideshow</b>;
    <item/>ative <i>widget</i> <b>Controls</b>;
    <item/>selecione <i>Configurable controls</i> em <b>Controls Type</b>;
    <item/>omita o controle de <i>pause</i> do slideshow;
    <item/>selecione <i>Black icons</i> em <b>Controls skin</b>;
  </lista>
</lista>

<comando>
/* CSS do paginador */
.vscc-controls {
    position: relative;
    z-index: 100;
}
.vscc-controls-previous {
    position: absolute;
    top: 120px;
    left: 0px;
    background: #ddd;
    padding: 0 5px 5px;
    border: 2px solid #333;
    border-radius: 5px;
}
.vscc-controls-next {
    position: absolute;
    top: 120px;
    right: 0px;
    background: #ddd;
    padding: 0 5px 5px;
    border: 2px solid #333;
    border-radius: 5px;
}
</comando>

<subsecao>EVA: Entity Views Attachment</subsecao>

<lista>
  <item>Download</item>: <url>https://drupal.org/project/eva</url>
  <item>Dependência</item>:
<link>https://drupal.org/project/ctools</link><text>Chaos tools suite</text>,
<link>https://drupal.org/project/token</link><text>Token</text> e
<link>https://drupal.org/project/views</link><text>Views</text>.
  <item>Função</item>: apresenta uma View como um campo de determinado tipo
                       de conteúdo;
  <item>Uso</item>:
  <lista>
    <item/>adicione um <b>display Eva Field</b> a uma View;
    <item/>configuração de injeção da View como um campo:
    <lista>
      <item/>indique o tipo de entidade em que essa View será apresentada:
             <b>Node</b>;
      <item/>indique o tipo de conteúdo (<b>Bundles</b>) em que essa View será
             apresentada;
    </lista>
    <item/>ative a opção para exibir o título da View no conteúdo;
    <item/>adicione um filtro contextual para obter o id do conteúdo;
    <lista>
      <item/>selecione o campo do tipo <b>Entity Reference</b> do tipo de
             conteúdo listado;
      <item/>ative a validação básica;
    </lista>
  </lista>
</lista>

    Ao criar uma <b>View</b> com <b>display Eva Field</b> pode-se
apresentá-la como um campo de um tipo de conteúdo, sendo possível listar o
conteúdo referenciado por meio do módulo <b>Entity Reference</b> ao acessar
o <b>Node</b>.

    Após a injeção da View, pode-se acessar o gerenciamento de exibição do
tipo de conteúdo selecionado para indicar a ordem do campo EVA, ou seja, a
View pode ser apresentada entre os campos do <b>Node</b>.

     Pode-se obter comportamento similar com uma View de bloco, sem a
utilização deste módulo, porém somente será exibida acima ou embaixo dos
campos do conteúdo.

<subsecao>Views Reference Filter</subsecao>

    Módulo disponível apenas para <b>Drupal 7</b>.

<lista>
  <item>Download</item>: <url>https://drupal.org/project/entityreference_filter</url>
  <item>Função</item>: adicionar filtros em views para campos Entity Reference;
  <item>Uso</item>:
  <lista>
    <item/>crie uma <b>View</b> para exibir um tipo de conteúdo que tenha o
           campo Entity Reference;
    <item/>adicione à <b>View</b> um novo display do tipo <b>Entity Reference</b>;
    <lista>
      <item/>ajuste o filtro desse display para o tipo de conteúdo
             referenciado;
      <item/>selecione nas configurações do formato o campo do conteúdo
             referenciado que será usado como filtro;
    </lista>
    <item/>adicione ao display principal, seja de página ou bloco, um
           filtro exposto para o campo identificado por <b>(reference filter)</b>;
    <item/>indique o <b>display Entity Reference</b> nesse filtro;
  </lista>
</lista>
